1. Working with HTML Elements

1.1. Handling Form Input

In this exercise, you will use Selenium to automate the process of filling out a form. The steps involve launching a web application, navigating to a form, filling out various input fields such as text boxes, radio buttons, and date pickers, and then submitting the form. This exercise demonstrates how to locate and interact with different types of HTML elements commonly found in Register User Scenarios.

Note: We won't explain how to create a test project, install Selenium WebDriver or ChromeDriver, or how to write setup and teardown methods because you are already familiar with these steps.

▪ Open the application using the URL: http://practice.bpbonline.com/. It's up to you which method you use to navigate to the URL. Here are two options:


o driver.Url Property - Navigate to a specific URL. Immediately loads the given URL in the current browser window.



o driver.Navigate().GoToUrl() Method A more explicit way to navigate to a URL, part of a broader set of navigation commands. Performs the same action as setting the Url property, but also allows for more complex navigation actions like going back, forward, or refreshing the page.



o In this case, since we are performing a straightforward navigation to the URL, the more appropriate method is to use driver.Url for its simplicity and readability. However, you can choose to use driver.Navigate().GoToUrl() if you prefer a more explicit approach.


▪ Click on the My Account link


▪ In the New Customer section, click on the Continue button.



▪ This will take you to the Account Creation page.


▪ For the My Account Information page, you will need to fill in all the mandatory information for account creation.

▪ Select Gender.

▪ Enter First Name.

▪ Enter Last Name.

▪ Enter Date of Birth.

▪ Since the registration will work only once per email address, generate a unique email address.



▪ Enter Email Address.

▪ Enter Company Name.

▪ Enter Street Address.

▪ Enter Suburb.

▪ Enter Postcode.

▪ Enter City.

▪ Enter State.

▪ Select Country from dropdown.

When dealing with dropdown elements in web forms, Selenium provides a convenient class called SelectElement which is part of the OpenQA.Selenium.Support.UI namespace. This class contains methods specifically designed for interacting with dropdowns.

▪ Install Selenium Support NuGet package.

▪ Import the necessary namespace.

▪ Identify the dropdown element using a locator (e.g., by name).

▪ Create a SelectElement object by passing the identified dropdown element to its constructor.

▪ Select an option from the dropdown by its visible text.

▪ You can also chain method calls to simplify the selection of an option from a dropdown list. 
Instead of breaking down the steps into multiple lines, chaining combines them into a single, streamlined statement.

▪ Enter Telephone Number.

▪ Opt for Newsletter Subscription.

▪ Enter Password.

▪ Confirm Password.

▪ Submit the form.

▪ Assert Your Account Has Been Created Page.

▪ Click on Log Off link.

▪ Click on Continue button.

▪ Print success message to the console.
